{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\employee-management\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EmployeeForm from './EmployeeForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [employees, setEmployees] = useState([]); // State to store employee data\n  const [error, setError] = useState(''); // State to handle errors\n  const [isDatabaseVisible, setIsDatabaseVisible] = useState(false); // State to control visibility of database\n\n  // Function to fetch employee data from the backend\n  const viewDatabase = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/employees');\n      if (!response.ok) {\n        throw new Error('Failed to fetch employees');\n      }\n      const data = await response.json();\n      console.log('Fetched data:', data);\n      setEmployees(data); // Set the fetched data to the state\n      setIsDatabaseVisible(true); // Show the database after successful fetch\n    } catch (err) {\n      setError('Error connecting to the server. Please try again.');\n    }\n  };\n  //\n  const deleteEmployee = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/employees/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        if (response.status === 404) {\n          throw new Error('Employee not found.');\n        }\n        throw new Error('Failed to delete employee.');\n      }\n\n      // Remove the deleted employee from the state\n      setEmployees(prevEmployees => prevEmployees.filter(employee => employee.id !== id));\n    } catch (err) {\n      setError(err.message || 'Error deleting employee. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: viewDatabase,\n      children: \"View Database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }, this), isDatabaseVisible && employees.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of Joining\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.employee_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.department\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.date_of_joining\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteEmployee(employee.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this) : isDatabaseVisible && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No employees found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 38\n    }, this) // Show this message when no employees are found\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"v2UQP/e4D3Z93kIMfQhGbJMby10=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","EmployeeForm","jsxDEV","_jsxDEV","Dashboard","_s","employees","setEmployees","error","setError","isDatabaseVisible","setIsDatabaseVisible","viewDatabase","response","fetch","ok","Error","data","json","console","log","err","deleteEmployee","id","method","status","prevEmployees","filter","employee","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","length","map","name","employee_id","email","phone","department","date_of_joining","role","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/employee-management/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport EmployeeForm from './EmployeeForm';\r\n\r\nconst Dashboard = () => {\r\n    const [employees, setEmployees] = useState([]); // State to store employee data\r\n    const [error, setError] = useState(''); // State to handle errors\r\n    const [isDatabaseVisible, setIsDatabaseVisible] = useState(false); // State to control visibility of database\r\n\r\n    // Function to fetch employee data from the backend\r\n    const viewDatabase = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/employees');\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch employees');\r\n            }\r\n            const data = await response.json();\r\n            console.log('Fetched data:', data);\r\n            setEmployees(data); // Set the fetched data to the state\r\n            setIsDatabaseVisible(true); // Show the database after successful fetch\r\n        } catch (err) {\r\n            setError('Error connecting to the server. Please try again.');\r\n        }\r\n    };\r\n//\r\n    const deleteEmployee = async (id) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/employees/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                if (response.status === 404) {\r\n                    throw new Error('Employee not found.');\r\n                }\r\n                throw new Error('Failed to delete employee.');\r\n            }\r\n    \r\n            // Remove the deleted employee from the state\r\n            setEmployees((prevEmployees) =>\r\n                prevEmployees.filter((employee) => employee.id !== id)\r\n            );\r\n        } catch (err) {\r\n            setError(err.message || 'Error deleting employee. Please try again.');\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h1>Employee Management Dashboard</h1>\r\n\r\n            {/* Employee Form */}\r\n            <EmployeeForm />\r\n\r\n            {/* View Database Button */}\r\n            <button onClick={viewDatabase}>View Database</button>\r\n\r\n            {/* Error Message */}\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n            {/* Displaying Employees Data */}\r\n            {isDatabaseVisible && employees.length > 0 ? (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Employee ID</th>\r\n                            <th>Email</th>\r\n                            <th>Phone</th>\r\n                            <th>Department</th>\r\n                            <th>Date of Joining</th>\r\n                            <th>Role</th>\r\n                            <th>Action</th> {/* Added Action Column */}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {employees.map((employee) => (\r\n                            <tr key={employee.id}>\r\n                                <td>{employee.name}</td>\r\n                                <td>{employee.employee_id}</td>\r\n                                <td>{employee.email}</td>\r\n                                <td>{employee.phone}</td>\r\n                                <td>{employee.department}</td>\r\n                                <td>{employee.date_of_joining}</td>\r\n                                <td>{employee.role}</td>\r\n                                <td>\r\n                                    {/* Delete Button */}\r\n                                    <button onClick={() => deleteEmployee(employee.id)}>\r\n                                        Delete\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                isDatabaseVisible && <p>No employees found.</p> // Show this message when no employees are found\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}