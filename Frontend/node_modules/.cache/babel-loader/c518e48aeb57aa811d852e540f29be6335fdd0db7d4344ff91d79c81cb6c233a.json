{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EmployeeForm=_ref=>{let{employeeToUpdate,onSubmit,onUpdate}=_ref;const[formData,setFormData]=useState({name:'',employee_id:'',email:'',phone:'',department:'',date_of_joining:'',role:''});const[error,setError]=useState('');const[success,setSuccess]=useState('');useEffect(()=>{if(employeeToUpdate){// Pre-fill form if updating\nsetFormData({name:employeeToUpdate.name,employee_id:employeeToUpdate.employee_id,email:employeeToUpdate.email,phone:employeeToUpdate.phone,department:employeeToUpdate.department,date_of_joining:employeeToUpdate.date_of_joining,role:employeeToUpdate.role});}},[employeeToUpdate]);const handleChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});};const handleSubmit=async e=>{e.preventDefault();setError('');setSuccess('');const method=employeeToUpdate?'PUT':'POST';const url=employeeToUpdate?`/api/employees/${employeeToUpdate.id}`// For update\n:'/api/employees';// For add\ntry{const response=await fetch(url,{method:method,headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});if(response.ok){const data=await response.json();setSuccess(data.message||'Form submitted successfully!');setFormData({name:'',employee_id:'',email:'',phone:'',department:'',date_of_joining:'',role:''});if(employeeToUpdate){onUpdate();// Call onUpdate after successful update\n}else{onSubmit();// Call onSubmit after adding new employee\n}}else{const errorData=await response.json();setError(errorData.message||'Submission failed.');console.error('Update failed:',errorData);// Log response for debugging\n}}catch(err){setError('Error connecting to the server. Please try again.');console.error('Error:',err);// Log any other errors\n}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:employeeToUpdate?'Update Employee':'Add Employee'}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),success&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:success}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",placeholder:\"Name\",value:formData.name,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"employee_id\",placeholder:\"Employee ID\",value:formData.employee_id,onChange:handleChange,required:true,maxLength:10}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",placeholder:\"Email\",value:formData.email,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"phone\",placeholder:\"Phone Number\",value:formData.phone,onChange:handleChange,required:true,pattern:\"\\\\d{10}\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"department\",value:formData.department,onChange:handleChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Department\"}),/*#__PURE__*/_jsx(\"option\",{value:\"HR\",children:\"HR\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Engineering\",children:\"Engineering\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Marketing\",children:\"Marketing\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"date_of_joining\",max:new Date().toISOString().split('T')[0],value:formData.date_of_joining,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"role\",placeholder:\"Role\",value:formData.role,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:employeeToUpdate?'Update':'Submit'}),/*#__PURE__*/_jsx(\"button\",{type:\"reset\",onClick:()=>setFormData({name:'',employee_id:'',email:'',phone:'',department:'',date_of_joining:'',role:''}),children:\"Reset\"})]})]});};export default EmployeeForm;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","EmployeeForm","_ref","employeeToUpdate","onSubmit","onUpdate","formData","setFormData","name","employee_id","email","phone","department","date_of_joining","role","error","setError","success","setSuccess","handleChange","e","value","target","handleSubmit","preventDefault","method","url","id","response","fetch","headers","body","JSON","stringify","ok","data","json","message","errorData","console","err","children","style","color","type","placeholder","onChange","required","maxLength","pattern","max","Date","toISOString","split","onClick"],"sources":["C:/Users/LENOVO/OneDrive/Desktop/projects/employee-management/Frontend/src/components/EmployeeForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst EmployeeForm = ({ employeeToUpdate, onSubmit, onUpdate }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    employee_id: '',\r\n    email: '',\r\n    phone: '',\r\n    department: '',\r\n    date_of_joining: '',\r\n    role: '',\r\n  });\r\n\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (employeeToUpdate) {\r\n      // Pre-fill form if updating\r\n      setFormData({\r\n        name: employeeToUpdate.name,\r\n        employee_id: employeeToUpdate.employee_id,\r\n        email: employeeToUpdate.email,\r\n        phone: employeeToUpdate.phone,\r\n        department: employeeToUpdate.department,\r\n        date_of_joining: employeeToUpdate.date_of_joining,\r\n        role: employeeToUpdate.role,\r\n      });\r\n    }\r\n  }, [employeeToUpdate]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    const method = employeeToUpdate ? 'PUT' : 'POST';\r\n    const url = employeeToUpdate\r\n      ? `/api/employees/${employeeToUpdate.id}`  // For update\r\n      : '/api/employees'; // For add\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSuccess(data.message || 'Form submitted successfully!');\r\n        setFormData({\r\n          name: '',\r\n          employee_id: '',\r\n          email: '',\r\n          phone: '',\r\n          department: '',\r\n          date_of_joining: '',\r\n          role: '',\r\n        });\r\n        if (employeeToUpdate) {\r\n          onUpdate(); // Call onUpdate after successful update\r\n        } else {\r\n          onSubmit(); // Call onSubmit after adding new employee\r\n        }\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(errorData.message || 'Submission failed.');\r\n        console.error('Update failed:', errorData); // Log response for debugging\r\n      }\r\n    } catch (err) {\r\n      setError('Error connecting to the server. Please try again.');\r\n      console.error('Error:', err); // Log any other errors\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{employeeToUpdate ? 'Update Employee' : 'Add Employee'}</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {success && <p style={{ color: 'green' }}>{success}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"employee_id\"\r\n          placeholder=\"Employee ID\"\r\n          value={formData.employee_id}\r\n          onChange={handleChange}\r\n          required\r\n          maxLength={10}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"phone\"\r\n          placeholder=\"Phone Number\"\r\n          value={formData.phone}\r\n          onChange={handleChange}\r\n          required\r\n          pattern=\"\\d{10}\"\r\n        />\r\n        <select\r\n          name=\"department\"\r\n          value={formData.department}\r\n          onChange={handleChange}\r\n          required\r\n        >\r\n          <option value=\"\">Select Department</option>\r\n          <option value=\"HR\">HR</option>\r\n          <option value=\"Engineering\">Engineering</option>\r\n          <option value=\"Marketing\">Marketing</option>\r\n        </select>\r\n        <input\r\n          type=\"date\"\r\n          name=\"date_of_joining\"\r\n          max={new Date().toISOString().split('T')[0]}\r\n          value={formData.date_of_joining}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"role\"\r\n          placeholder=\"Role\"\r\n          value={formData.role}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">{employeeToUpdate ? 'Update' : 'Submit'}</button>\r\n        <button\r\n          type=\"reset\"\r\n          onClick={() =>\r\n            setFormData({\r\n              name: '',\r\n              employee_id: '',\r\n              email: '',\r\n              phone: '',\r\n              department: '',\r\n              date_of_joining: '',\r\n              role: '',\r\n            })\r\n          }\r\n        >\r\n          Reset\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}