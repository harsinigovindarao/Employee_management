{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Desktop\\\\projects\\\\employee-management\\\\Frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EmployeeForm from './EmployeeForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [error, setError] = useState('');\n  const [isDatabaseVisible, setIsDatabaseVisible] = useState(false);\n  const [employeeToUpdate, setEmployeeToUpdate] = useState(null); // Track employee to update\n\n  const viewDatabase = async () => {\n    try {\n      const response = await fetch('/api/employees');\n      if (!response.ok) {\n        throw new Error('Failed to fetch employees');\n      }\n      const data = await response.json();\n      setEmployees(data);\n      setIsDatabaseVisible(true);\n    } catch (err) {\n      setError('Error connecting to the server. Please try again.');\n    }\n  };\n  const updateEmployee = employee => {\n    setEmployeeToUpdate(employee); // Set the employee data to be updated\n  };\n  const deleteEmployee = async id => {\n    try {\n      const response = await fetch(`/api/employees/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setEmployees(prevEmployees => prevEmployees.filter(employee => employee.id !== id));\n      }\n    } catch (err) {\n      setError('Error deleting employee. Please try again.');\n    }\n  };\n  const handleUpdateSuccess = () => {\n    setEmployeeToUpdate(null); // Clear the employee being updated\n    viewDatabase(); // Refresh the data after update\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeForm, {\n      employeeToUpdate: employeeToUpdate,\n      onSubmit: viewDatabase // Reload employees after adding\n      ,\n      onUpdate: handleUpdateSuccess // Refresh after updating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: viewDatabase,\n      children: \"View Database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), isDatabaseVisible && employees.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of Joining\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.employee_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.department\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.date_of_joining\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateEmployee(employee),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteEmployee(employee.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : isDatabaseVisible && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No employees found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ZTMNR//SjQ5fyVevdi2+V0oE4eA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","EmployeeForm","jsxDEV","_jsxDEV","Dashboard","_s","employees","setEmployees","error","setError","isDatabaseVisible","setIsDatabaseVisible","employeeToUpdate","setEmployeeToUpdate","viewDatabase","response","fetch","ok","Error","data","json","err","updateEmployee","employee","deleteEmployee","id","method","prevEmployees","filter","handleUpdateSuccess","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onUpdate","onClick","style","color","length","map","name","employee_id","email","phone","department","date_of_joining","role","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/OneDrive/Desktop/projects/employee-management/Frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport EmployeeForm from './EmployeeForm';\r\n\r\nconst Dashboard = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [isDatabaseVisible, setIsDatabaseVisible] = useState(false);\r\n  const [employeeToUpdate, setEmployeeToUpdate] = useState(null); // Track employee to update\r\n\r\n  const viewDatabase = async () => {\r\n    try {\r\n      const response = await fetch('/api/employees');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch employees');\r\n      }\r\n      const data = await response.json();\r\n      setEmployees(data);\r\n      setIsDatabaseVisible(true);\r\n    } catch (err) {\r\n      setError('Error connecting to the server. Please try again.');\r\n    }\r\n  };\r\n\r\n  const updateEmployee = (employee) => {\r\n    setEmployeeToUpdate(employee); // Set the employee data to be updated\r\n  };\r\n\r\n  const deleteEmployee = async (id) => {\r\n    try {\r\n      const response = await fetch(`/api/employees/${id}`, { method: 'DELETE' });\r\n      if (response.ok) {\r\n        setEmployees((prevEmployees) =>\r\n          prevEmployees.filter((employee) => employee.id !== id)\r\n        );\r\n      }\r\n    } catch (err) {\r\n      setError('Error deleting employee. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleUpdateSuccess = () => {\r\n    setEmployeeToUpdate(null); // Clear the employee being updated\r\n    viewDatabase(); // Refresh the data after update\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Employee Management Dashboard</h1>\r\n      <EmployeeForm\r\n        employeeToUpdate={employeeToUpdate}\r\n        onSubmit={viewDatabase} // Reload employees after adding\r\n        onUpdate={handleUpdateSuccess} // Refresh after updating\r\n      />\r\n      <button onClick={viewDatabase}>View Database</button>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      {isDatabaseVisible && employees.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Employee ID</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Department</th>\r\n              <th>Date of Joining</th>\r\n              <th>Role</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {employees.map((employee) => (\r\n              <tr key={employee.id}>\r\n                <td>{employee.name}</td>\r\n                <td>{employee.employee_id}</td>\r\n                <td>{employee.email}</td>\r\n                <td>{employee.phone}</td>\r\n                <td>{employee.department}</td>\r\n                <td>{employee.date_of_joining}</td>\r\n                <td>{employee.role}</td>\r\n                <td>\r\n                  <button onClick={() => updateEmployee(employee)}>Update</button>\r\n                  <button onClick={() => deleteEmployee(employee.id)}>Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        isDatabaseVisible && <p>No employees found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}