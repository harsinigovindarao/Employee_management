{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\employee-management\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport EmployeeForm from './EmployeeForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [employees, setEmployees] = useState([]); // State to store employee data\n  const [error, setError] = useState(''); // State to handle errors\n\n  // Function to fetch employee data from the backend\n  const viewDatabase = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/employees');\n      if (!response.ok) {\n        throw new Error('Failed to fetch employees');\n      }\n      const data = await response.json();\n      setEmployees(data); // Set the fetched data to the state\n    } catch (err) {\n      setError('Error connecting to the server. Please try again.');\n    }\n  };\n\n  // Fetch employees when the component is mounted\n  useEffect(() => {\n    viewDatabase(); // Fetch employee data on component mount\n  }, []); // Empty dependency array means this runs only once, when the component is mounted\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: viewDatabase,\n      children: \"View Database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this), employees.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of Joining\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.employee_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.department\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.date_of_joining\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No employees found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"6LqG5kVfVEIm4gqgIR0Mei2MEqI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","EmployeeForm","jsxDEV","_jsxDEV","Dashboard","_s","employees","setEmployees","error","setError","viewDatabase","response","fetch","ok","Error","data","json","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","length","map","employee","name","employee_id","email","phone","department","date_of_joining","role","id","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/employee-management/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport EmployeeForm from './EmployeeForm';\r\n\r\nconst Dashboard = () => {\r\n    const [employees, setEmployees] = useState([]);  // State to store employee data\r\n    const [error, setError] = useState('');  // State to handle errors\r\n\r\n    // Function to fetch employee data from the backend\r\n    const viewDatabase = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/employees');\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch employees');\r\n            }\r\n            const data = await response.json();\r\n            \r\n            setEmployees(data);  // Set the fetched data to the state\r\n        } catch (err) {\r\n            setError('Error connecting to the server. Please try again.');\r\n        }\r\n    };\r\n\r\n    // Fetch employees when the component is mounted\r\n    useEffect(() => {\r\n        viewDatabase();  // Fetch employee data on component mount\r\n    }, []);  // Empty dependency array means this runs only once, when the component is mounted\r\n\r\n    return (\r\n        <div>\r\n            <h1>Employee Management Dashboard</h1>\r\n\r\n            {/* Employee Form */}\r\n            <EmployeeForm />\r\n\r\n            {/* View Database Button */}\r\n            <button onClick={viewDatabase}>View Database</button>\r\n\r\n            {/* Error Message */}\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n            {/* Displaying Employees Data */}\r\n            {employees.length > 0 ? (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Employee ID</th>\r\n                            <th>Email</th>\r\n                            <th>Phone</th>\r\n                            <th>Department</th>\r\n                            <th>Date of Joining</th>\r\n                            <th>Role</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {employees.map((employee) => (\r\n                            <tr key={employee.id}>\r\n                                <td>{employee.name}</td>\r\n                                <td>{employee.employee_id}</td>\r\n                                <td>{employee.email}</td>\r\n                                <td>{employee.phone}</td>\r\n                                <td>{employee.department}</td>\r\n                                <td>{employee.date_of_joining}</td>\r\n                                <td>{employee.role}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <p>No employees found.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}